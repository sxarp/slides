doctype html
html
  head
    title Slim Examples
    meta name="author" content="sxarp" charset="utf-8"
    link rel="stylesheet" href="css/reveal.css"
    link rel="stylesheet" href="css/theme/sky.css" id="theme"
    link rel="stylesheet" href="lib/css/zenburn.css"
    script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS_HTML"
    script type="text/x-mathjax-config"
      |
        MathJax.Hub.Config({
        tex2jax: {
          inlineMath: [ ['$','$'], ["\\(","\\)"] ],
          displayMath: [ ['$$','$$'], ["\\[","\\]"] ]
          }
         });
  body
    div class="reveal"
      div class="slides"
        section
          h2 てすとてすお
          p aaaaaa
        section
          h2 てすと２
          p aaaaaaa
        section
          h2 mathtest
          p
            | $\frac{a}{b}$
              $$ x = y  $$
        section
          h2 Pretty Code
          pre
            | <code contenteditable>
              [1, 2, 3].map do |item|
                puts item
              end
              <code>
        section
          h2 てすとてすお
          p aaaaaa
    script src="lib/js/head.min.js"
    script src="js/reveal.min.js"
    javascript:
      Reveal.initialize({
      controls: false,
      progress: true,
      history: true,
      theme: Reveal.getQueryHash().theme, // available themes are in /css/theme
      transition: Reveal.getQueryHash().transition || 'linear', // default/cube/page/concave/zoom/linear/none
      // Optional libraries used to extend on reveal.js
      dependencies: [
      { src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
      { src: 'plugin/markdown/showdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
      { src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
      { src: 'plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
      { src: 'plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
      { src: 'plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }
      ]});
